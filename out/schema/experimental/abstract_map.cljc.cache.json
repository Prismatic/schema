["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$schema.experimental.abstract-map","~:imports",null,"~:requires",["^ ","~$str","~$clojure.string","^:","^:","~$s","~$schema.core","^;","^;","~$spec","~$schema.spec.core","^=","^=","~$variant","~$schema.spec.variant","^?","^?"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$abstract-map-schema",["^ ","~:schema",["~#list",["~$schema.core/->FnSchema","~$output-schema3059",["~$input-schema3061"]]],"~:protocol-inline",null,"~:meta",["^ ","~:arglists",["^E",["~$quote",["^E",[["~$dispatch-key","~$schema"]]]]],"~:file","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","~:line",56,"~:column",9,"~:end-line",56,"~:end-column",28,"^D",["^E",["^F","^G",["^H"]]],"~:doc","Inputs: [dispatch-key :- s/Keyword schema :- (s/pred map?)]\n\n  A schema representing an 'abstract class' map that must match at least one concrete\n   subtype (indicated by the value of dispatch-key, a keyword).  Add subtypes by calling\n   `extend-schema`.","~:raw-arglists",["^E",["^L",["^E",[["^M","~:-","~$s/Keyword","^N","~:-",["^E",["~$s/pred","~$map?"]]]]]]]],"^5","~$schema.experimental.abstract-map/abstract-map-schema","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",28,"~:method-params",["^E",[["~$G__3064","~$G__3065"]]],"~:protocol-impl",null,"~:arglists-meta",["^E",[null,null]],"^Q",1,"~:variadic?",false,"^U",["^E",["^L",["^E",[["^M","~:-","^V","^N","~:-",["^E",["^W","^X"]]]]]]],"^P",56,"~:ret-tag","~$schema.experimental.abstract-map/AbstractSchema","^R",56,"~:max-fixed-arity",2,"~:fn-var",true,"^K",["^E",["^L",["^E",[["^M","^N"]]]]],"^T","Inputs: [dispatch-key :- s/Keyword schema :- (s/pred map?)]\n\n  A schema representing an 'abstract class' map that must match at least one concrete\n   subtype (indicated by the value of dispatch-key, a keyword).  Add subtypes by calling\n   `extend-schema`."],"~$open-abstract-map-schema",["^ ","^D",["^E",["^F","~$output-schema3077",["~$input-schema3079"]]],"^I",null,"^J",["^ ","^K",["^E",["^L",["^E",[["^M","^N"]]]]],"^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^P",63,"^Q",9,"^R",63,"^S",33,"^D",["^E",["^F","^19",["^1:"]]],"^T","Inputs: [dispatch-key :- s/Keyword schema :- (s/pred map?)]\n\n  Like abstract-map-schema, but allows unknown types to validate (for, e.g. forward\n   compatibility).","^U",["^E",["^L",["^E",[["^M","~:-","^V","^N","~:-",["^E",["^W","^X"]]]]]]]],"^5","~$schema.experimental.abstract-map/open-abstract-map-schema","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",33,"^Z",["^E",[["~$G__3082","~$G__3083"]]],"^11",null,"^12",["^E",[null,null]],"^Q",1,"^13",false,"^U",["^E",["^L",["^E",[["^M","~:-","^V","^N","~:-",["^E",["^W","^X"]]]]]]],"^P",63,"^14","^15","^R",63,"^16",2,"^17",true,"^K",["^E",["^L",["^E",[["^M","^N"]]]]],"^T","Inputs: [dispatch-key :- s/Keyword schema :- (s/pred map?)]\n\n  Like abstract-map-schema, but allows unknown types to validate (for, e.g. forward\n   compatibility)."],"~$map->SchemaExtension",["^ ","^I",null,"^J",["^ ","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^P",17,"^Q",12,"^R",17,"^S",27,"~:internal-ctor",true,"~:factory","~:map","^K",["^E",["^L",["^E",[["~$G__3016"]]]]],"^T","Factory function for schema.experimental.abstract-map/SchemaExtension, taking a map of keywords to field values."],"^5","~$schema.experimental.abstract-map/map->SchemaExtension","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",27,"^Z",["^E",[["^1B"]]],"^11",null,"^12",["^E",[null,null]],"^Q",1,"^1?",true,"^13",false,"^1@","^1A","^P",17,"^14","~$schema.experimental.abstract-map/SchemaExtension","^R",17,"^16",1,"^17",true,"^K",["^E",["^L",["^E",[["^1B"]]]]],"^T","Factory function for schema.experimental.abstract-map/SchemaExtension, taking a map of keywords to field values."],"~$->AbstractSchema",["^ ","^I",null,"^J",["^ ","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^P",28,"^Q",12,"^R",28,"^S",26,"^1?",true,"^1@","~:positional","^K",["^E",["^L",["^E",[["~$sub-schemas","^M","^N","~$open?"]]]]],"^T","Positional factory function for schema.experimental.abstract-map/AbstractSchema."],"^5","~$schema.experimental.abstract-map/->AbstractSchema","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",26,"^Z",["^E",[["^1G","^M","^N","^1H"]]],"^11",null,"^12",["^E",[null,null]],"^Q",1,"^1?",true,"^13",false,"^1@","^1F","^P",28,"^14","^15","^R",28,"^16",4,"^17",true,"^K",["^E",["^L",["^E",[["^1G","^M","^N","^1H"]]]]],"^T","Positional factory function for schema.experimental.abstract-map/AbstractSchema."],"~$SchemaExtension",["^ ","~:num-fields",4,"~:protocols",["^4",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$schema.core/Schema","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^5","^1D","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",27,"~:type",true,"^Q",12,"^1?",true,"^P",17,"~:record",true,"^R",17,"~:tag","~$function","~:skip-protocol-flag",["^4",["^1M","^1N","^1O","^1P","^1Q","^1S","^1T","^1U","^1V","^1W","^1X","^1Y","^1Z","^1[","^20"]]],"~$AbstractSchema",["^ ","^1K",4,"^1L",["^4",["~$schema.experimental.abstract-map/PExtensibleSchema","^1M","^1N","^1O","^1P","^1Q","^1R","^1S","^1T","^1U","^1V","^1W","^1X","^1Y","^1Z","^1[","^20"]],"^5","^15","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",26,"^21",true,"^Q",12,"^1?",true,"^P",28,"^22",true,"^R",28,"^23","^24","^25",["^4",["^1M","^1N","^1O","^1P","^1Q","^1S","^1T","^1U","^1V","^1W","^1X","^1Y","^1Z","^1[","^20"]]],"~$PExtensibleSchema",["^ ","^J",["^ ","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^P",13,"^Q",14,"^R",13,"^S",31,"~:protocol-symbol",true,"~:jsdoc",["^E",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$extend-schema!",[["~$this","~$extension","~$schema-name","~$dispatch-values"]]]]],"^29",true,"^5","^27","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",31,"^Q",1,"^P",13,"^2;",["^ ","^2<",["^ ","^2=",[["^2>","^2?","^2@","^2A"]]]],"~:info",null,"^R",13,"^23","~$any","~:impls",["^4",["^15"]],"^2:",["^E",["@interface"]]],"~$map->AbstractSchema",["^ ","^I",null,"^J",["^ ","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^P",28,"^Q",12,"^R",28,"^S",26,"^1?",true,"^1@","^1A","^K",["^E",["^L",["^E",[["~$G__3032"]]]]],"^T","Factory function for schema.experimental.abstract-map/AbstractSchema, taking a map of keywords to field values."],"^5","~$schema.experimental.abstract-map/map->AbstractSchema","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",26,"^Z",["^E",[["^2F"]]],"^11",null,"^12",["^E",[null,null]],"^Q",1,"^1?",true,"^13",false,"^1@","^1A","^P",28,"^14","^15","^R",28,"^16",1,"^17",true,"^K",["^E",["^L",["^E",[["^2F"]]]]],"^T","Factory function for schema.experimental.abstract-map/AbstractSchema, taking a map of keywords to field values."],"^2=",["^ ","^I",null,"^J",["^ ","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^P",14,"^Q",4,"^R",14,"^S",18,"~:protocol","^27","^T",null,"^K",["^E",["^L",["^E",[["^2>","^2?","^2@","^2A"]]]]]],"^2H","^27","^5","~$schema.experimental.abstract-map/extend-schema!","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",18,"^Z",["^E",[["^2>","^2?","^2@","^2A"]]],"^11",null,"^12",["^E",[null,null]],"^Q",1,"^13",false,"^P",13,"^14","^2C","^R",14,"^16",4,"^17",true,"^K",["^E",["^L",["^E",[["^2>","^2?","^2@","^2A"]]]]],"^T",null],"~$->SchemaExtension",["^ ","^I",null,"^J",["^ ","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^P",17,"^Q",12,"^R",17,"^S",27,"^1?",true,"^1@","^1F","^K",["^E",["^L",["^E",[["^2@","~$base-schema","~$extended-schema","~$explain-value"]]]]],"^T","Positional factory function for schema.experimental.abstract-map/SchemaExtension."],"^5","~$schema.experimental.abstract-map/->SchemaExtension","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",27,"^Z",["^E",[["^2@","^2K","^2L","^2M"]]],"^11",null,"^12",["^E",[null,null]],"^Q",1,"^1?",true,"^13",false,"^1@","^1F","^P",17,"^14","^1D","^R",17,"^16",4,"^17",true,"^K",["^E",["^L",["^E",[["^2@","^2K","^2L","^2M"]]]]],"^T","Positional factory function for schema.experimental.abstract-map/SchemaExtension."],"^1G",["^ ","^I",null,"^J",["^ ","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^P",75,"^Q",7,"^R",75,"^S",18,"^K",["^E",["^L",["^E",[["~$abstract-schema"]]]]]],"^5","~$schema.experimental.abstract-map/sub-schemas","^O","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/experimental/abstract_map.cljc","^S",18,"^Z",["^E",[["^2O"]]],"^11",null,"^12",["^E",[null,null]],"^Q",1,"^13",false,"^P",75,"^14","^2C","^R",75,"^16",1,"^17",true,"^K",["^E",["^L",["^E",[["^2O"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$s","^;","^;","^;"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["^V","~$schema.core/Any","^D","^2M","~:base-schema","~:schema.core/error","^2@","~:extended-schema","^N","~:value","^X","^2K","^21","^C","^18","^2L","~:output","^W","~$extend-schema","~:open?","~:sub-schemas","~:dispatch-key","~:error","~:input","~:explain-value","^T","^1H","^1G","~:guard","^M","~:schema-name"]],"~:order",["^37","^2V","^2X","^35","^D","^2[","^2@","^2K","^2L","^2M","^31","^32","^30","^36","^C","^1G","^M","^N","^1H","^V","^W","^X","^34","^T","^2U","^21","^2Y","^33","^2W","^2Z","^18"]],"^T","Schemas representing abstract classes and subclasses"]