["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ ","~$char-map","~$schema.utils"],"~:excludes",["~#set",["~$record?"]],"~:name","^6","~:imports",null,"~:requires",["^ ","~$goog.string.format","^=","~$gobject","~$goog.object","^?","^?","~$gstring","~$goog.string","^A","^A","~$string","~$clojure.string","^C","^C"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$max-value-length",["^ ","^:","~$schema.utils/max-value-length","~:file","src/cljc/schema/utils.cljc","~:line",40,"~:column",1,"~:end-line",40,"~:end-column",22,"~:meta",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",40,"^K",6,"^L",40,"^M",22],"~:tag","~$cljs.core/Atom"],"~$NamedError",["^ ","~:num-fields",2,"~:protocols",["^8",["~$cljs.core/IPrintWithWriter"]],"^:","~$schema.utils/NamedError","^I","src/cljc/schema/utils.cljc","^M",20,"~:type",true,"^K",10,"^J",113,"~:record",false,"^L",113,"^O","~$function","~:skip-protocol-flag",["^8",["^T"]]],"~$error?",["^ ","~:protocol-inline",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",135,"^K",7,"^L",135,"^M",13,"~:arglists",["~#list",["~$quote",["^11",[["~$x"]]]]]],"^:","~$schema.utils/error?","^I","src/cljc/schema/utils.cljc","^M",13,"~:method-params",["^11",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^11",[null,null]],"^K",1,"~:variadic?",false,"^J",135,"~:ret-tag","~$boolean","^L",135,"~:max-fixed-arity",1,"~:fn-var",true,"^10",["^11",["^12",["^11",[["~$x"]]]]]],"~$make-ValidationError",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",104,"^K",7,"^L",104,"^M",27,"^10",["^11",["^12",["^11",[["~$schema","~$value","~$expectation-delay","~$fail-explanation"]]]]],"~:doc","for cljs sake (easier than normalizing imports in macros.clj)"],"^:","~$schema.utils/make-ValidationError","^I","src/cljc/schema/utils.cljc","^M",27,"^14",["^11",[["^1=","^1>","^1?","^1@"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^J",104,"^18","~$schema.utils/ValidationError","^L",104,"^1:",4,"^1;",true,"^10",["^11",["^12",["^11",[["^1=","^1>","^1?","^1@"]]]]],"^1A","for cljs sake (easier than normalizing imports in macros.clj)"],"~$map->ErrorContainer",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",129,"^K",12,"^L",129,"^M",26,"~:internal-ctor",true,"~:factory","~:map","^10",["^11",["^12",["^11",[["~$G__739"]]]]],"^1A","Factory function for schema.utils/ErrorContainer, taking a map of keywords to field values."],"^:","~$schema.utils/map->ErrorContainer","^I","src/cljc/schema/utils.cljc","^M",26,"^14",["^11",[["^1H"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^1E",true,"^17",false,"^1F","^1G","^J",129,"^18","~$schema.utils/ErrorContainer","^L",129,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["^1H"]]]]],"^1A","Factory function for schema.utils/ErrorContainer, taking a map of keywords to field values."],"~$value-name",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",42,"^K",7,"^L",42,"^M",17,"^10",["^11",["^12",["^11",[["^1>"]]]]],"^1A","Provide a descriptive short name for a value."],"^:","~$schema.utils/value-name","^I","src/cljc/schema/utils.cljc","^M",17,"^14",["^11",[["^1>"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^J",42,"^18",["^8",[null,"~$any","~$cljs.core/Symbol"]],"^L",42,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["^1>"]]]]],"^1A","Provide a descriptive short name for a value."],"~$use-fn-validation",["^ ","^:","~$schema.utils/use-fn-validation","^I","src/cljc/schema/utils.cljc","^J",176,"^K",1,"^L",176,"^M",23,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",176,"^K",6,"^L",176,"^M",23],"^1A","Turn on run-time function validation for functions compiled when\n   s/compile-fn-validation was true -- has no effect for functions compiled\n   when it is false.","^O","^P"],"~$ValidationError",["^ ","^R",4,"^S",["^8",["^T"]],"^:","^1C","^I","src/cljc/schema/utils.cljc","^M",25,"^V",true,"^K",10,"^J",92,"^W",false,"^L",92,"^O","^X","^Y",["^8",["^T"]]],"~$format*",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",37,"^K",7,"^L",37,"^M",14,"^10",["^11",["^12",["^11",[["~$fmt","~$&","~$args"]]]]],"~:top-fn",["^ ","^17",true,"~:fixed-arity",1,"^1:",1,"^14",[["^11",["^1S","^1T"]]],"^10",["^11",[["^1S","~$&","^1T"]]],"^16",["^11",[null]]]],"^:","~$schema.utils/format*","^I","src/cljc/schema/utils.cljc","^M",14,"^1U",["^ ","^17",true,"^1V",1,"^1:",1,"^14",[["^11",["^1S","^1T"]]],"^10",["^11",[["^1S","~$&","^1T"]]],"^16",["^11",[null]]],"^14",[["^11",["^1S","^1T"]]],"^15",null,"^1V",1,"^16",["^11",[null]],"^K",1,"^17",true,"~:methods",[["^ ","^1V",1,"^17",true,"^O","^1M"]],"^J",37,"^18","^1M","^L",37,"^1:",1,"^1;",true,"^10",["^11",[["^1S","~$&","^1T"]]]],"~$fn-schema-bearer",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",29,"^K",7,"^L",29,"^M",23,"^10",["^11",["^12",["^11",[["~$f"]]]]],"^1A","What class can we associate the fn schema with? In Clojure use the class of the fn; in\n   cljs just use the fn itself."],"^:","~$schema.utils/fn-schema-bearer","^I","src/cljc/schema/utils.cljc","^M",23,"^14",["^11",[["~$f"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^J",29,"^L",29,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["~$f"]]]]],"^1A","What class can we associate the fn schema with? In Clojure use the class of the fn; in\n   cljs just use the fn itself."],"~$->ValidationError",["^ ","^[",null,"^N",["^ ","^S",["^8",["^T"]],"^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^M",25,"^K",10,"^1F","~:positional","^J",92,"^L",92,"^10",["^11",["^12",["^11",[["^1=","^1>","^1?","^1@"]]]]],"^Y",["^8",["^T"]],"^1A","Positional factory function for schema.utils/ValidationError."],"^S",["^8",["^T"]],"^:","~$schema.utils/->ValidationError","^I","src/cljc/schema/utils.cljc","^M",25,"^14",["^11",[["^1=","^1>","^1?","^1@"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^1F","^20","^J",92,"^18","^1C","^L",92,"^1:",4,"^1;",true,"^10",["^11",["^12",["^11",[["^1=","^1>","^1?","^1@"]]]]],"^Y",["^8",["^T"]],"^1A","Positional factory function for schema.utils/ValidationError."],"~$named-error-explain",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",118,"^K",7,"^L",118,"^M",26,"^10",["^11",["^12",["^11",[["~$err"]]]]]],"^:","~$schema.utils/named-error-explain","^I","src/cljc/schema/utils.cljc","^M",26,"^14",["^11",[["^23"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^J",118,"^18","~$cljs.core/List","^L",118,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["^23"]]]]]],"~$fn-name",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",62,"^K",7,"^L",62,"^M",14,"^10",["^11",["^12",["^11",[["~$f"]]]]],"^1A","A meaningful name for a function that looks like its symbol, if applicable."],"^:","~$schema.utils/fn-name","^I","src/cljc/schema/utils.cljc","^M",14,"^14",["^11",[["~$f"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^J",62,"^18",["^8",["~$clj","~$cljs.core/IVector","^1M","^B","~$cljs.core/MetaFn","~$clj-nil"]],"^L",62,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["~$f"]]]]],"^1A","A meaningful name for a function that looks like its symbol, if applicable."],"^9",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",78,"^K",7,"^L",78,"^M",14,"^10",["^11",["^12",["^11",[["~$x"]]]]]],"^:","~$schema.utils/record?","^I","src/cljc/schema/utils.cljc","^M",14,"^14",["^11",[["~$x"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^J",78,"^18","^19","^L",78,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["~$x"]]]]]],"~$->NamedError",["^ ","^[",null,"^N",["^ ","^S",["^8",["^T"]],"^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^M",20,"^K",10,"^1F","^20","^J",113,"^L",113,"^10",["^11",["^12",["^11",[["~$name","~$error"]]]]],"^Y",["^8",["^T"]],"^1A","Positional factory function for schema.utils/NamedError."],"^S",["^8",["^T"]],"^:","~$schema.utils/->NamedError","^I","src/cljc/schema/utils.cljc","^M",20,"^14",["^11",[["^2>","^2?"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^1F","^20","^J",113,"^18","^U","^L",113,"^1:",2,"^1;",true,"^10",["^11",["^12",["^11",[["^2>","^2?"]]]]],"^Y",["^8",["^T"]],"^1A","Positional factory function for schema.utils/NamedError."],"~$type-of",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",25,"^K",7,"^L",25,"^M",14,"^10",["^11",["^12",["^11",[["~$x"]]]]]],"^:","~$schema.utils/type-of","^I","src/cljc/schema/utils.cljc","^M",14,"^14",["^11",[["~$x"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^J",25,"^18","^1M","^L",25,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["~$x"]]]]]],"~$declare-class-schema!",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",166,"^K",9,"^L",166,"^M",30,"^10",["^11",["^12",["^11",[["~$klass","^1="]]]]]],"^:","~$schema.utils/declare-class-schema!","^I","src/cljc/schema/utils.cljc","^M",30,"^14",["^11",[["^2D","^1="]]],"^15",null,"^16",["^11",[null,null]],"^K",3,"^17",false,"^J",166,"^18","^1M","^L",166,"^1:",2,"^1;",true,"^10",["^11",["^12",["^11",[["^2D","^1="]]]]]],"~$ErrorContainer",["^ ","^R",1,"^S",["^8",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","^T","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^:","^1J","^I","src/cljc/schema/utils.cljc","^M",26,"^V",true,"^K",12,"^1E",true,"^J",129,"^W",true,"^L",129,"^O","^X","^Y",["^8",["^2G","^2H","^2I","^2J","^2K","^2L","^2M","^2N","^2O","^T","^2P","^2Q","^2R","^2S","^2T"]]],"~$->ErrorContainer",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",129,"^K",12,"^L",129,"^M",26,"^1E",true,"^1F","^20","^10",["^11",["^12",["^11",[["^2?"]]]]],"^1A","Positional factory function for schema.utils/ErrorContainer."],"^:","~$schema.utils/->ErrorContainer","^I","src/cljc/schema/utils.cljc","^M",26,"^14",["^11",[["^2?"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^1E",true,"^17",false,"^1F","^20","^J",129,"^18","^1J","^L",129,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["^2?"]]]]],"^1A","Positional factory function for schema.utils/ErrorContainer."],"~$class-schema",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",169,"^K",9,"^L",169,"^M",21,"^10",["^11",["^12",["^11",[["^2D"]]]]]],"^:","~$schema.utils/class-schema","^I","src/cljc/schema/utils.cljc","^M",21,"^14",["^11",[["^2D"]]],"^15",null,"^16",["^11",[null,null]],"^K",3,"^17",false,"^J",169,"^18","^1M","^L",169,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["^2D"]]]]]],"~$validation-error-explain",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",97,"^K",7,"^L",97,"^M",31,"^10",["^11",["^12",["^11",[["^23"]]]]]],"^:","~$schema.utils/validation-error-explain","^I","src/cljc/schema/utils.cljc","^M",31,"^14",["^11",[["^23"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^J",97,"^18","^25","^L",97,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["^23"]]]]]],"~$error-val",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",138,"^K",7,"^L",138,"^M",16,"^10",["^11",["^12",["^11",[["~$x"]]]]]],"^:","~$schema.utils/error-val","^I","src/cljc/schema/utils.cljc","^M",16,"^14",["^11",[["~$x"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^J",138,"^18",["^8",["^1M","^2;"]],"^L",138,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["~$x"]]]]]],"~$assoc-when",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",15,"^K",7,"^L",15,"^M",17,"^10",["^11",["^12",["^11",[["~$m","~$&","~$kvs"]]]]],"^1A","Like assoc but only assocs when value is truthy.  Copied from plumbing.core so that\n   schema need not depend on plumbing.","^1U",["^ ","^17",true,"^1V",1,"^1:",1,"^14",[["^11",["~$m","^32"]]],"^10",["^11",[["~$m","~$&","^32"]]],"^16",["^11",[null]]]],"^:","~$schema.utils/assoc-when","^I","src/cljc/schema/utils.cljc","^M",17,"^1U",["^ ","^17",true,"^1V",1,"^1:",1,"^14",[["^11",["~$m","^32"]]],"^10",["^11",[["~$m","~$&","^32"]]],"^16",["^11",[null]]],"^14",[["^11",["~$m","^32"]]],"^15",null,"^1V",1,"^16",["^11",[null]],"^K",1,"^17",true,"^1X",[["^ ","^1V",1,"^17",true,"^O",["^8",[null,"^28","^1M"]]]],"^J",15,"^18","^1M","^L",15,"^1:",1,"^1;",true,"^10",["^11",[["~$m","~$&","^32"]]],"^1A","Like assoc but only assocs when value is truthy.  Copied from plumbing.core so that\n   schema need not depend on plumbing."],"^2?",["^ ","^[",null,"^N",["^ ","^I","/Users/ambrose/Projects/schema-local-dev/master/src/cljc/schema/utils.cljc","^J",131,"^K",7,"^L",131,"^M",12,"^10",["^11",["^12",["^11",[["~$x"]]]]],"^1A","Distinguish a value (must be non-nil) as an error."],"^:","~$schema.utils/error","^I","src/cljc/schema/utils.cljc","^M",12,"^14",["^11",[["~$x"]]],"^15",null,"^16",["^11",[null,null]],"^K",1,"^17",false,"^J",131,"^18","^1J","^L",131,"^1:",1,"^1;",true,"^10",["^11",["^12",["^11",[["~$x"]]]]],"^1A","Distinguish a value (must be non-nil) as an error."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^6","^6"],"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~$named","^1=","^1@","^1>","^2>","^1?","~$not","~:error","^2?"]],"~:order",["^1=","^1>","^1?","^1@","^3:","^2>","^2?","^39","^3;"]],"^1A","Private utilities used in schema implementation."]